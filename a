// Generated by GNU Bison 3.0.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <http://www.gnu.org/software/bison/>.

digraph "Parser.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: . translation_unit $end\l"]
  0 -> 1 [style=solid label="IDENTIFIER"]
  0 -> 2 [style=solid label="CONSTANT"]
  0 -> 3 [style=solid label="BLOCK"]
  0 -> 4 [style=dashed label="translation_unit"]
  0 -> 5 [style=dashed label="expr"]
  0 -> 6 [style=dashed label="eval"]
  0 -> 7 [style=dashed label="role"]
  0 -> 8 [style=dashed label="member"]
  1 [label="State 1\n\l  9 role: IDENTIFIER .\l 12 member: IDENTIFIER . '.' IDENTIFIER\l"]
  1 -> 9 [style=solid label="'.'"]
  1 -> "1R9" [style=solid]
 "1R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  2 [label="State 2\n\l 10 role: CONSTANT .\l"]
  2 -> "2R10" [style=solid]
 "2R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  3 [label="State 3\n\l 11 role: BLOCK .\l"]
  3 -> "3R11" [style=solid]
 "3R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  4 [label="State 4\n\l  0 $accept: translation_unit . $end\l  2 translation_unit: translation_unit . expr END_OF_STATEMENT\l"]
  4 -> 10 [style=solid label="$end"]
  4 -> 1 [style=solid label="IDENTIFIER"]
  4 -> 2 [style=solid label="CONSTANT"]
  4 -> 3 [style=solid label="BLOCK"]
  4 -> 11 [style=dashed label="expr"]
  4 -> 6 [style=dashed label="eval"]
  4 -> 7 [style=dashed label="role"]
  4 -> 8 [style=dashed label="member"]
  5 [label="State 5\n\l  1 translation_unit: expr . END_OF_STATEMENT\l"]
  5 -> 12 [style=solid label="END_OF_STATEMENT"]
  6 [label="State 6\n\l  5 expr: eval .\l"]
  6 -> "6R5" [style=solid]
 "6R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  7 [label="State 7\n\l  3 expr: role . ':' role\l  4     | role . '=' role\l  6 eval: role .\l  7     | role . '(' ')'\l"]
  7 -> 13 [style=solid label="':'"]
  7 -> 14 [style=solid label="'='"]
  7 -> 15 [style=solid label="'('"]
  7 -> "7R6" [style=solid]
 "7R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  8 [label="State 8\n\l  8 role: member .\l 13 member: member . '.' IDENTIFIER\l"]
  8 -> 16 [style=solid label="'.'"]
  8 -> "8R8" [style=solid]
 "8R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  9 [label="State 9\n\l 12 member: IDENTIFIER '.' . IDENTIFIER\l"]
  9 -> 17 [style=solid label="IDENTIFIER"]
  10 [label="State 10\n\l  0 $accept: translation_unit $end .\l"]
  10 -> "10R0" [style=solid]
 "10R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  11 [label="State 11\n\l  2 translation_unit: translation_unit expr . END_OF_STATEMENT\l"]
  11 -> 18 [style=solid label="END_OF_STATEMENT"]
  12 [label="State 12\n\l  1 translation_unit: expr END_OF_STATEMENT .\l"]
  12 -> "12R1" [style=solid]
 "12R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  13 [label="State 13\n\l  3 expr: role ':' . role\l"]
  13 -> 1 [style=solid label="IDENTIFIER"]
  13 -> 2 [style=solid label="CONSTANT"]
  13 -> 3 [style=solid label="BLOCK"]
  13 -> 19 [style=dashed label="role"]
  13 -> 8 [style=dashed label="member"]
  14 [label="State 14\n\l  4 expr: role '=' . role\l"]
  14 -> 1 [style=solid label="IDENTIFIER"]
  14 -> 2 [style=solid label="CONSTANT"]
  14 -> 3 [style=solid label="BLOCK"]
  14 -> 20 [style=dashed label="role"]
  14 -> 8 [style=dashed label="member"]
  15 [label="State 15\n\l  7 eval: role '(' . ')'\l"]
  15 -> 21 [style=solid label="')'"]
  16 [label="State 16\n\l 13 member: member '.' . IDENTIFIER\l"]
  16 -> 22 [style=solid label="IDENTIFIER"]
  17 [label="State 17\n\l 12 member: IDENTIFIER '.' IDENTIFIER .\l"]
  17 -> "17R12" [style=solid]
 "17R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  18 [label="State 18\n\l  2 translation_unit: translation_unit expr END_OF_STATEMENT .\l"]
  18 -> "18R2" [style=solid]
 "18R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  19 [label="State 19\n\l  3 expr: role ':' role .\l"]
  19 -> "19R3" [style=solid]
 "19R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  20 [label="State 20\n\l  4 expr: role '=' role .\l"]
  20 -> "20R4" [style=solid]
 "20R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  21 [label="State 21\n\l  7 eval: role '(' ')' .\l"]
  21 -> "21R7" [style=solid]
 "21R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  22 [label="State 22\n\l 13 member: member '.' IDENTIFIER .\l"]
  22 -> "22R13" [style=solid]
 "22R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
}
